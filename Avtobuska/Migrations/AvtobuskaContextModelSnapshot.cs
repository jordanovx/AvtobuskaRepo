// <auto-generated />
using System;
using Avtobuska.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Avtobuska.Migrations
{
    [DbContext(typeof(AvtobuskaContext))]
    partial class AvtobuskaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Avtobuska.Models.Bilet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cena");

                    b.Property<bool>("Izdaden");

                    b.Property<int>("LinijaID");

                    b.Property<bool>("Rezerviran");

                    b.Property<int>("SedisteBroj");

                    b.HasKey("ID");

                    b.HasIndex("LinijaID");

                    b.ToTable("Bilet");
                });

            modelBuilder.Entity("Avtobuska.Models.Linija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojNaSedista");

                    b.Property<string>("Name");

                    b.Property<int>("Peron");

                    b.Property<int>("PrevoznikID");

                    b.Property<DateTime>("VremeNaTrgnuvanje");

                    b.HasKey("ID");

                    b.HasIndex("PrevoznikID");

                    b.ToTable("Linija");
                });

            modelBuilder.Entity("Avtobuska.Models.Mesto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Mesto");
                });

            modelBuilder.Entity("Avtobuska.Models.Prevoznik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Prevoznik");
                });

            modelBuilder.Entity("Avtobuska.Models.Stanica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CenaNaEdenPravec");

                    b.Property<decimal>("CenaNaPovraten");

                    b.Property<int>("LinijaID");

                    b.Property<int>("MestoID");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.HasIndex("LinijaID");

                    b.HasIndex("MestoID");

                    b.ToTable("Stanica");
                });

            modelBuilder.Entity("Avtobuska.Models.Bilet", b =>
                {
                    b.HasOne("Avtobuska.Models.Linija", "Linija")
                        .WithMany()
                        .HasForeignKey("LinijaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Avtobuska.Models.Linija", b =>
                {
                    b.HasOne("Avtobuska.Models.Prevoznik", "Prevoznik")
                        .WithMany()
                        .HasForeignKey("PrevoznikID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Avtobuska.Models.Stanica", b =>
                {
                    b.HasOne("Avtobuska.Models.Linija", "Linija")
                        .WithMany()
                        .HasForeignKey("LinijaID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Avtobuska.Models.Mesto", "Mesto")
                        .WithMany()
                        .HasForeignKey("MestoID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
